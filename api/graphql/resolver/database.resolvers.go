package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"
	"fmt"

	graph "github.com/minkezhang/truffle/api/graphql/generated"
	"github.com/minkezhang/truffle/api/graphql/generated/model"
)

// Mal is the resolver for the mal field.
func (r *metadataResolver) Mal(ctx context.Context, obj *model.Metadata) (*model.APIData, error) {
	return obj.Mal, nil
}

// Spotify is the resolver for the spotify field.
func (r *metadataResolver) Spotify(ctx context.Context, obj *model.Metadata) (*model.APIData, error) {
	return obj.Spotify, nil
}

// Kitsu is the resolver for the kitsu field.
func (r *metadataResolver) Kitsu(ctx context.Context, obj *model.Metadata) (*model.APIData, error) {
	return obj.Kitsu, nil
}

// Steam is the resolver for the steam field.
func (r *metadataResolver) Steam(ctx context.Context, obj *model.Metadata) (*model.APIData, error) {
	return obj.Steam, nil
}

// Metadata returns graph.MetadataResolver implementation.
func (r *Resolver) Metadata() graph.MetadataResolver { return &metadataResolver{r} }

type metadataResolver struct{ *Resolver }

// database.proto
// Fully specifies the database spec.
//
// To generate this protobuf file, run
//   protoc -I api/ --go_out=api/ --go_opt=paths=import --go_opt=module=github.com/minkezhang/tracker/api api/*proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: database.proto

package database

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Corpus int32

const (
	Corpus_CORPUS_UNKNOWN     Corpus = 0
	Corpus_CORPUS_ANIME       Corpus = 1
	Corpus_CORPUS_ANIME_FILM  Corpus = 2
	Corpus_CORPUS_MANGA       Corpus = 3
	Corpus_CORPUS_BOOK        Corpus = 4
	Corpus_CORPUS_SHORT_STORY Corpus = 5
	Corpus_CORPUS_FILM        Corpus = 6
	Corpus_CORPUS_TV          Corpus = 7
	Corpus_CORPUS_ALBUM       Corpus = 8
	Corpus_CORPUS_GAME        Corpus = 9
)

// Enum value maps for Corpus.
var (
	Corpus_name = map[int32]string{
		0: "CORPUS_UNKNOWN",
		1: "CORPUS_ANIME",
		2: "CORPUS_ANIME_FILM",
		3: "CORPUS_MANGA",
		4: "CORPUS_BOOK",
		5: "CORPUS_SHORT_STORY",
		6: "CORPUS_FILM",
		7: "CORPUS_TV",
		8: "CORPUS_ALBUM",
		9: "CORPUS_GAME",
	}
	Corpus_value = map[string]int32{
		"CORPUS_UNKNOWN":     0,
		"CORPUS_ANIME":       1,
		"CORPUS_ANIME_FILM":  2,
		"CORPUS_MANGA":       3,
		"CORPUS_BOOK":        4,
		"CORPUS_SHORT_STORY": 5,
		"CORPUS_FILM":        6,
		"CORPUS_TV":          7,
		"CORPUS_ALBUM":       8,
		"CORPUS_GAME":        9,
	}
)

func (x Corpus) Enum() *Corpus {
	p := new(Corpus)
	*p = x
	return p
}

func (x Corpus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Corpus) Descriptor() protoreflect.EnumDescriptor {
	return file_database_proto_enumTypes[0].Descriptor()
}

func (Corpus) Type() protoreflect.EnumType {
	return &file_database_proto_enumTypes[0]
}

func (x Corpus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Corpus.Descriptor instead.
func (Corpus) EnumDescriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{0}
}

type Provider int32

const (
	Provider_PROVIDER_UNKNOWN          Provider = 0
	Provider_PROVIDER_CRUNCHYROLL      Provider = 1
	Provider_PROVIDER_NETFLIX          Provider = 2
	Provider_PROVIDER_AMAZON_STREAMING Provider = 3
	Provider_PROVIDER_BATTLENET        Provider = 4
	Provider_PROVIDER_EPIC             Provider = 5
	Provider_PROVIDER_GOOGLE_PLAY      Provider = 6
	Provider_PROVIDER_HULU             Provider = 7
	Provider_PROVIDER_ORIGINS          Provider = 8
	Provider_PROVIDER_DISNEY_PLUS      Provider = 9
	Provider_PROVIDER_HBO_MAX          Provider = 10
	Provider_PROVIDER_FUNIMATION       Provider = 11
	Provider_PROVIDER_STEAM            Provider = 12
)

// Enum value maps for Provider.
var (
	Provider_name = map[int32]string{
		0:  "PROVIDER_UNKNOWN",
		1:  "PROVIDER_CRUNCHYROLL",
		2:  "PROVIDER_NETFLIX",
		3:  "PROVIDER_AMAZON_STREAMING",
		4:  "PROVIDER_BATTLENET",
		5:  "PROVIDER_EPIC",
		6:  "PROVIDER_GOOGLE_PLAY",
		7:  "PROVIDER_HULU",
		8:  "PROVIDER_ORIGINS",
		9:  "PROVIDER_DISNEY_PLUS",
		10: "PROVIDER_HBO_MAX",
		11: "PROVIDER_FUNIMATION",
		12: "PROVIDER_STEAM",
	}
	Provider_value = map[string]int32{
		"PROVIDER_UNKNOWN":          0,
		"PROVIDER_CRUNCHYROLL":      1,
		"PROVIDER_NETFLIX":          2,
		"PROVIDER_AMAZON_STREAMING": 3,
		"PROVIDER_BATTLENET":        4,
		"PROVIDER_EPIC":             5,
		"PROVIDER_GOOGLE_PLAY":      6,
		"PROVIDER_HULU":             7,
		"PROVIDER_ORIGINS":          8,
		"PROVIDER_DISNEY_PLUS":      9,
		"PROVIDER_HBO_MAX":          10,
		"PROVIDER_FUNIMATION":       11,
		"PROVIDER_STEAM":            12,
	}
)

func (x Provider) Enum() *Provider {
	p := new(Provider)
	*p = x
	return p
}

func (x Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_database_proto_enumTypes[1].Descriptor()
}

func (Provider) Type() protoreflect.EnumType {
	return &file_database_proto_enumTypes[1]
}

func (x Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provider.Descriptor instead.
func (Provider) EnumDescriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{1}
}

type Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries map[string]*Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Database) Reset() {
	*x = Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{0}
}

func (x *Database) GetEntries() map[string]*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Corpus    Corpus     `protobuf:"varint,1,opt,name=corpus,proto3,enum=tracker.database.Corpus" json:"corpus,omitempty"`
	Titles    []string   `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty"`
	Score     float32    `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	Providers []Provider `protobuf:"varint,4,rep,packed,name=providers,proto3,enum=tracker.database.Provider" json:"providers,omitempty"`
	Queued    bool       `protobuf:"varint,5,opt,name=queued,proto3" json:"queued,omitempty"`
	// Types that are assignable to AuxData:
	//	*Entry_AuxDataVideo
	//	*Entry_AuxDataBook
	//	*Entry_AuxDataGame
	//	*Entry_AuxDataAudio
	AuxData isEntry_AuxData `protobuf_oneof:"aux_data"`
	// Types that are assignable to Tracker:
	//	*Entry_TrackerVideo
	//	*Entry_TrackerBook
	Tracker isEntry_Tracker `protobuf_oneof:"tracker"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{1}
}

func (x *Entry) GetCorpus() Corpus {
	if x != nil {
		return x.Corpus
	}
	return Corpus_CORPUS_UNKNOWN
}

func (x *Entry) GetTitles() []string {
	if x != nil {
		return x.Titles
	}
	return nil
}

func (x *Entry) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Entry) GetProviders() []Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *Entry) GetQueued() bool {
	if x != nil {
		return x.Queued
	}
	return false
}

func (m *Entry) GetAuxData() isEntry_AuxData {
	if m != nil {
		return m.AuxData
	}
	return nil
}

func (x *Entry) GetAuxDataVideo() *AuxDataVideo {
	if x, ok := x.GetAuxData().(*Entry_AuxDataVideo); ok {
		return x.AuxDataVideo
	}
	return nil
}

func (x *Entry) GetAuxDataBook() *AuxDataBook {
	if x, ok := x.GetAuxData().(*Entry_AuxDataBook); ok {
		return x.AuxDataBook
	}
	return nil
}

func (x *Entry) GetAuxDataGame() *AuxDataGame {
	if x, ok := x.GetAuxData().(*Entry_AuxDataGame); ok {
		return x.AuxDataGame
	}
	return nil
}

func (x *Entry) GetAuxDataAudio() *AuxDataAudio {
	if x, ok := x.GetAuxData().(*Entry_AuxDataAudio); ok {
		return x.AuxDataAudio
	}
	return nil
}

func (m *Entry) GetTracker() isEntry_Tracker {
	if m != nil {
		return m.Tracker
	}
	return nil
}

func (x *Entry) GetTrackerVideo() *TrackerVideo {
	if x, ok := x.GetTracker().(*Entry_TrackerVideo); ok {
		return x.TrackerVideo
	}
	return nil
}

func (x *Entry) GetTrackerBook() *TrackerBook {
	if x, ok := x.GetTracker().(*Entry_TrackerBook); ok {
		return x.TrackerBook
	}
	return nil
}

type isEntry_AuxData interface {
	isEntry_AuxData()
}

type Entry_AuxDataVideo struct {
	AuxDataVideo *AuxDataVideo `protobuf:"bytes,6,opt,name=aux_data_video,json=auxDataVideo,proto3,oneof"`
}

type Entry_AuxDataBook struct {
	AuxDataBook *AuxDataBook `protobuf:"bytes,7,opt,name=aux_data_book,json=auxDataBook,proto3,oneof"`
}

type Entry_AuxDataGame struct {
	AuxDataGame *AuxDataGame `protobuf:"bytes,8,opt,name=aux_data_game,json=auxDataGame,proto3,oneof"`
}

type Entry_AuxDataAudio struct {
	AuxDataAudio *AuxDataAudio `protobuf:"bytes,9,opt,name=aux_data_audio,json=auxDataAudio,proto3,oneof"`
}

func (*Entry_AuxDataVideo) isEntry_AuxData() {}

func (*Entry_AuxDataBook) isEntry_AuxData() {}

func (*Entry_AuxDataGame) isEntry_AuxData() {}

func (*Entry_AuxDataAudio) isEntry_AuxData() {}

type isEntry_Tracker interface {
	isEntry_Tracker()
}

type Entry_TrackerVideo struct {
	TrackerVideo *TrackerVideo `protobuf:"bytes,10,opt,name=tracker_video,json=trackerVideo,proto3,oneof"`
}

type Entry_TrackerBook struct {
	TrackerBook *TrackerBook `protobuf:"bytes,11,opt,name=tracker_book,json=trackerBook,proto3,oneof"`
}

func (*Entry_TrackerVideo) isEntry_Tracker() {}

func (*Entry_TrackerBook) isEntry_Tracker() {}

type AuxDataGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Studios   []string `protobuf:"bytes,1,rep,name=studios,proto3" json:"studios,omitempty"`
	Directors []string `protobuf:"bytes,2,rep,name=directors,proto3" json:"directors,omitempty"`
	Writers   []string `protobuf:"bytes,3,rep,name=writers,proto3" json:"writers,omitempty"`
}

func (x *AuxDataGame) Reset() {
	*x = AuxDataGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuxDataGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxDataGame) ProtoMessage() {}

func (x *AuxDataGame) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxDataGame.ProtoReflect.Descriptor instead.
func (*AuxDataGame) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{2}
}

func (x *AuxDataGame) GetStudios() []string {
	if x != nil {
		return x.Studios
	}
	return nil
}

func (x *AuxDataGame) GetDirectors() []string {
	if x != nil {
		return x.Directors
	}
	return nil
}

func (x *AuxDataGame) GetWriters() []string {
	if x != nil {
		return x.Writers
	}
	return nil
}

type AuxDataVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Studios   []string `protobuf:"bytes,1,rep,name=studios,proto3" json:"studios,omitempty"`
	Directors []string `protobuf:"bytes,2,rep,name=directors,proto3" json:"directors,omitempty"`
	Writers   []string `protobuf:"bytes,3,rep,name=writers,proto3" json:"writers,omitempty"`
}

func (x *AuxDataVideo) Reset() {
	*x = AuxDataVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuxDataVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxDataVideo) ProtoMessage() {}

func (x *AuxDataVideo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxDataVideo.ProtoReflect.Descriptor instead.
func (*AuxDataVideo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{3}
}

func (x *AuxDataVideo) GetStudios() []string {
	if x != nil {
		return x.Studios
	}
	return nil
}

func (x *AuxDataVideo) GetDirectors() []string {
	if x != nil {
		return x.Directors
	}
	return nil
}

func (x *AuxDataVideo) GetWriters() []string {
	if x != nil {
		return x.Writers
	}
	return nil
}

type AuxDataAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Composers []string `protobuf:"bytes,1,rep,name=composers,proto3" json:"composers,omitempty"`
}

func (x *AuxDataAudio) Reset() {
	*x = AuxDataAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuxDataAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxDataAudio) ProtoMessage() {}

func (x *AuxDataAudio) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxDataAudio.ProtoReflect.Descriptor instead.
func (*AuxDataAudio) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{4}
}

func (x *AuxDataAudio) GetComposers() []string {
	if x != nil {
		return x.Composers
	}
	return nil
}

type AuxDataBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authors []string `protobuf:"bytes,1,rep,name=authors,proto3" json:"authors,omitempty"`
}

func (x *AuxDataBook) Reset() {
	*x = AuxDataBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuxDataBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxDataBook) ProtoMessage() {}

func (x *AuxDataBook) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxDataBook.ProtoReflect.Descriptor instead.
func (*AuxDataBook) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{5}
}

func (x *AuxDataBook) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

type TrackerVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season  int32 `protobuf:"varint,1,opt,name=season,proto3" json:"season,omitempty"`
	Episode int32 `protobuf:"varint,2,opt,name=episode,proto3" json:"episode,omitempty"`
}

func (x *TrackerVideo) Reset() {
	*x = TrackerVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackerVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackerVideo) ProtoMessage() {}

func (x *TrackerVideo) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackerVideo.ProtoReflect.Descriptor instead.
func (*TrackerVideo) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{6}
}

func (x *TrackerVideo) GetSeason() int32 {
	if x != nil {
		return x.Season
	}
	return 0
}

func (x *TrackerVideo) GetEpisode() int32 {
	if x != nil {
		return x.Episode
	}
	return 0
}

type TrackerBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume  int32 `protobuf:"varint,1,opt,name=volume,proto3" json:"volume,omitempty"`
	Chapter int32 `protobuf:"varint,2,opt,name=chapter,proto3" json:"chapter,omitempty"`
}

func (x *TrackerBook) Reset() {
	*x = TrackerBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackerBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackerBook) ProtoMessage() {}

func (x *TrackerBook) ProtoReflect() protoreflect.Message {
	mi := &file_database_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackerBook.ProtoReflect.Descriptor instead.
func (*TrackerBook) Descriptor() ([]byte, []int) {
	return file_database_proto_rawDescGZIP(), []int{7}
}

func (x *TrackerBook) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *TrackerBook) GetChapter() int32 {
	if x != nil {
		return x.Chapter
	}
	return 0
}

var File_database_proto protoreflect.FileDescriptor

var file_database_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x1a, 0x53, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf5, 0x04, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x72,
	0x70, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x75, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41,
	0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x43, 0x0a, 0x0d, 0x61,
	0x75, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6f, 0x6f,
	0x6b, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6f, 0x6f, 0x6b,
	0x12, 0x43, 0x0a, 0x0d, 0x61, 0x75, 0x78, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x78, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x75, 0x78, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x61, 0x75, 0x78, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x41, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x45, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x48, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x01, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x61, 0x75, 0x78, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x22,
	0x5f, 0x0a, 0x0b, 0x41, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x60, 0x0a, 0x0c, 0x41, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x2c, 0x0a, 0x0c, 0x41, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x73,
	0x22, 0x27, 0x0a, 0x0b, 0x41, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6f, 0x6f, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x0c, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x22, 0x3f, 0x0a, 0x0b, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2a, 0xc3, 0x01, 0x0a,
	0x06, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x52, 0x50, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x41, 0x4e, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x41, 0x4e, 0x49, 0x4d, 0x45, 0x5f, 0x46, 0x49,
	0x4c, 0x4d, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x4d,
	0x41, 0x4e, 0x47, 0x41, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53,
	0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x52, 0x50, 0x55,
	0x53, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x05, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x4d, 0x10, 0x06,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x54, 0x56, 0x10, 0x07, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x41, 0x4c, 0x42, 0x55, 0x4d, 0x10,
	0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x52, 0x50, 0x55, 0x53, 0x5f, 0x47, 0x41, 0x4d, 0x45,
	0x10, 0x09, 0x2a, 0xba, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x52, 0x5f, 0x43, 0x52, 0x55, 0x4e, 0x43, 0x48, 0x59, 0x52, 0x4f, 0x4c, 0x4c, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x45, 0x54, 0x46,
	0x4c, 0x49, 0x58, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x52, 0x5f, 0x41, 0x4d, 0x41, 0x5a, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x49,
	0x4e, 0x47, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52,
	0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x4e, 0x45, 0x54, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x50, 0x49, 0x43, 0x10, 0x05, 0x12,
	0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x4f, 0x4f, 0x47,
	0x4c, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x48, 0x55, 0x4c, 0x55, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x53,
	0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x44,
	0x49, 0x53, 0x4e, 0x45, 0x59, 0x5f, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x48, 0x42, 0x4f, 0x5f, 0x4d, 0x41, 0x58,
	0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x46,
	0x55, 0x4e, 0x49, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x0c, 0x42,
	0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69,
	0x6e, 0x6b, 0x65, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_database_proto_rawDescOnce sync.Once
	file_database_proto_rawDescData = file_database_proto_rawDesc
)

func file_database_proto_rawDescGZIP() []byte {
	file_database_proto_rawDescOnce.Do(func() {
		file_database_proto_rawDescData = protoimpl.X.CompressGZIP(file_database_proto_rawDescData)
	})
	return file_database_proto_rawDescData
}

var file_database_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_database_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_database_proto_goTypes = []interface{}{
	(Corpus)(0),          // 0: tracker.database.Corpus
	(Provider)(0),        // 1: tracker.database.Provider
	(*Database)(nil),     // 2: tracker.database.Database
	(*Entry)(nil),        // 3: tracker.database.Entry
	(*AuxDataGame)(nil),  // 4: tracker.database.AuxDataGame
	(*AuxDataVideo)(nil), // 5: tracker.database.AuxDataVideo
	(*AuxDataAudio)(nil), // 6: tracker.database.AuxDataAudio
	(*AuxDataBook)(nil),  // 7: tracker.database.AuxDataBook
	(*TrackerVideo)(nil), // 8: tracker.database.TrackerVideo
	(*TrackerBook)(nil),  // 9: tracker.database.TrackerBook
	nil,                  // 10: tracker.database.Database.EntriesEntry
}
var file_database_proto_depIdxs = []int32{
	10, // 0: tracker.database.Database.entries:type_name -> tracker.database.Database.EntriesEntry
	0,  // 1: tracker.database.Entry.corpus:type_name -> tracker.database.Corpus
	1,  // 2: tracker.database.Entry.providers:type_name -> tracker.database.Provider
	5,  // 3: tracker.database.Entry.aux_data_video:type_name -> tracker.database.AuxDataVideo
	7,  // 4: tracker.database.Entry.aux_data_book:type_name -> tracker.database.AuxDataBook
	4,  // 5: tracker.database.Entry.aux_data_game:type_name -> tracker.database.AuxDataGame
	6,  // 6: tracker.database.Entry.aux_data_audio:type_name -> tracker.database.AuxDataAudio
	8,  // 7: tracker.database.Entry.tracker_video:type_name -> tracker.database.TrackerVideo
	9,  // 8: tracker.database.Entry.tracker_book:type_name -> tracker.database.TrackerBook
	3,  // 9: tracker.database.Database.EntriesEntry.value:type_name -> tracker.database.Entry
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_database_proto_init() }
func file_database_proto_init() {
	if File_database_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_database_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuxDataGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuxDataVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuxDataAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuxDataBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackerVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackerBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_database_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Entry_AuxDataVideo)(nil),
		(*Entry_AuxDataBook)(nil),
		(*Entry_AuxDataGame)(nil),
		(*Entry_AuxDataAudio)(nil),
		(*Entry_TrackerVideo)(nil),
		(*Entry_TrackerBook)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_database_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_database_proto_goTypes,
		DependencyIndexes: file_database_proto_depIdxs,
		EnumInfos:         file_database_proto_enumTypes,
		MessageInfos:      file_database_proto_msgTypes,
	}.Build()
	File_database_proto = out.File
	file_database_proto_rawDesc = nil
	file_database_proto_goTypes = nil
	file_database_proto_depIdxs = nil
}

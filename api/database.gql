directive @goField(
	forceResolver: Boolean
	name: String
  omittable: Boolean
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

enum APIType {
  API_NONE

  API_TRUFFLE
  API_MAL
  API_KITSU
  API_STEAM
  API_SPOTIFY
}

enum CorpusType {
  CORPUS_NONE

  CORPUS_ANIME
  CORPUS_ANIME_FILM
  CORPUS_MANGA
  CORPUS_BOOK
  CORPUS_SHORT_STORY
  CORPUS_FILM
  CORPUS_TV
  CORPUS_ALBUM
  CORPUS_GAME
}

enum ProviderType {
  PROVIDER_NONE
  PROVIDER_OTHER

  PROVIDER_CRUNCHYROLL
  PROVIDER_DISNEY_PLUS
  PROVIDER_HULU
  PROVIDER_HBO_MAX
  PROVIDER_NETFLIX
  PROVIDER_AMAZON_STREAMING
  PROVIDER_GOOGLE_PLAY
  PROVIDER_APPLE_TV
  PROVIDER_STEAM
}

type Title {
  locale: String!
  title: String!
}

type Entry {
  corpus: CorpusType!
  id: ID!

  metadata: Metadata!
}

type Metadata {
  truffle: APIData!  # ID is the same as the Entry ID

  sources: [APIData!] @goField(forceResolver: true)
}

type APIData {
  api: APIType!
  id: ID!  # ID is unique to the API.

  queued: Boolean!
  cached: Boolean!

  # The work is considered whole, and the user has already consumed this piece
  # of media at least once.
  completed: Boolean!

  score: Float

  titles: [Title!]
  providers: [ProviderType!]
  tags: [String!]

  aux: Aux
  tracker: Tracker
}
